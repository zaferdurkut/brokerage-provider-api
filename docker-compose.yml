version: "3"

services:
  application:
    build:
      context: .
      dockerfile: Dockerfile
    command: /bin/sh -c "/application_start.sh"
    restart: always
    ports:
      - "8000:80"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  order_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - .:/app
    command: bash -c "python -u src/core/service/order_consumer/order_consumer.py"
#    command: bash -c "tail -f /dev/null"
    depends_on:
      - kafka
      - application

  notification_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - .:/app
    command: bash -c "python -u src/core/service/notification_consumer/notification_consumer.py"
#    command: bash -c "tail -f /dev/null"
    depends_on:
      - kafka
      - application

  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data

  redis:
    restart: always
    image: redis:5.0.7
    ports:
      - "6379:6379"
    volumes:
      - .data/db:/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
      - "19092:19092"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "orders:1:1,notifications:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./.docker/kafka/var/run/docker.sock:/var/run/docker.sock
    links:
      - zookeeper
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
    depends_on:
      - kafka


  jaeger:
    image: jaegertracing/all-in-one:latest
    env_file:
      - .env
    ports:
      - "5776:5776/udp"
      - "16686:16686"
    depends_on:
      - application
